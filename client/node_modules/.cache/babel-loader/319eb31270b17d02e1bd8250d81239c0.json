{"ast":null,"code":"var _jsxFileName = \"/Users/nivsuroghon/Documents/programming/gallery_app/image-gallery/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // Pages\n\nimport Home from \"./pages/home\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport Loading from './components/Loading'; // import { Home, Profile, ExternalApi } from './views';\n\nimport { BrowserRouter as Route, Router, Switch } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Gallery from \"./components/Gallery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // if left empty returns random photos\n\n  const [term, setTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true`).then(res => res.json()).then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    }).catch(err => console.log(err)); // whenever the search term changes makes sure the fetch called again with new parameter\n  }, [term]);\n  const {\n    checkLoading\n  } = useAuth0();\n\n  if (checkLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BIm/PT2FdzsPwmeupUAUqL0bm8Y=\", false, function () {\n  return [useAuth0];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nivsuroghon/Documents/programming/gallery_app/image-gallery/client/src/App.js"],"names":["React","useState","useEffect","Home","Card","Navbar","Loading","BrowserRouter","Route","Router","Switch","useAuth0","Gallery","App","images","setImages","isLoading","setIsLoading","term","setTerm","fetch","then","res","json","data","hits","catch","err","console","log","checkLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AAEA,SAASC,aAAa,IAAIC,KAA1B,EAAiCC,MAAjC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAAUC,SAAV,IAAuBd,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C,CAFa,CAGb;;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAAE,qEAAoEF,IAAK,+BAA3E,CAAL,CACCG,IADD,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZT,MAAAA,SAAS,CAACS,IAAI,CAACC,IAAN,CAAT;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALD,EAMCS,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANd,EADc,CAQd;AACD,GATQ,EASN,CAACT,IAAD,CATM,CAAT;AAWA,QAAM;AAAEY,IAAAA;AAAF,MAAmBnB,QAAQ,EAAjC;;AAEA,MAAImB,YAAJ,EAAkB;AAChB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAE3B;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjCQU,G;UAiBkBF,Q;;;KAjBlBE,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// Pages\nimport Home from \"./pages/home\";\n\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport Loading from './components/Loading';\n\n// import { Home, Profile, ExternalApi } from './views';\n\nimport { BrowserRouter as Route, Router, Switch } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Gallery from \"./components/Gallery\";\n\nfunction App() {\n  const [images , setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // if left empty returns random photos\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true`)\n    .then( res => res.json())\n    .then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err))\n    // whenever the search term changes makes sure the fetch called again with new parameter\n  }, [term]);\n\n  const { checkLoading } = useAuth0();\n\n  if (checkLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <div className=\"app\">\n          <Route exact path=\"/\" component={Home} />\n        </div>\n      </Switch>\n      \n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}