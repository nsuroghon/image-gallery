{"ast":null,"code":"var _jsxFileName = \"/Users/nivsuroghon/Documents/programming/gallery_app/image-gallery/client/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import { Pagination, PaginationLink, PaginationItem, Input, Button } from 'reactstrap';\n\nimport axios, { Axios } from 'axios';\nimport Card from './Card';\nimport PaginationNav from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Gallery = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [imagesPerPage] = useState(10);\n  useEffect(() => {\n    const fetchImages = async () => {\n      setIsLoading(true);\n      const res = await axios.get(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true`);\n      setImages(res.data.hits);\n      setIsLoading(false);\n    };\n\n    fetchImages(); // fetch(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true`)\n    // .then( res => res.json())\n    // .then(data => {\n    //   console.log(data)\n    //   setImages(data.hits);\n    //   setIsLoading(false);\n    // })\n    // .catch(err => console.log(err))\n    // whenever the search term changes makes sure the fetch called again with new parameter\n  }, [term]); // get current images\n\n  const indexOfLastImage = currentPage * imagesPerPage;\n  const indexOfFirstImage = indexOfLastImage - imagesPerPage;\n  const currentImages = images.slice(indexOfFirstImage, indexOfLastImage);\n  console.log(currentImages); // change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto py-0\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-6xl text-center mx-auto mt-32\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      // <div className=\"grid grid-flow-row-dense grid-cols-3 gap-x-6 gap-y-6\">\n      _jsxDEV(\"div\", {\n        className: \"masonry before:box-inherit after:box-inherit overflow-y-scroll\",\n        children: currentImages.map(image =>\n        /*#__PURE__*/\n        // without pagination\n        _jsxDEV(Card, {\n          image: image\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this) // with pagination\n        // <Card key={image.id} image={currentImages}/>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationNav, {\n      imagesPerPage: imagesPerPage,\n      totalImages: images.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gallery, \"5Fse2rkmcnQIKMBfD4kccb46ysY=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/nivsuroghon/Documents/programming/gallery_app/image-gallery/client/src/components/Gallery.js"],"names":["React","useState","useEffect","axios","Axios","Card","PaginationNav","Gallery","images","setImages","isLoading","setIsLoading","term","setTerm","currentPage","setCurrentPage","imagesPerPage","fetchImages","res","get","data","hits","indexOfLastImage","indexOfFirstImage","currentImages","slice","console","log","paginate","pageNumber","map","image","id","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,cAA1B;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACe,aAAD,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,WAAW,GAAG,YAAW;AAC7BN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMO,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,qEAAoEP,IAAK,+BAApF,CAAlB;AACAH,MAAAA,SAAS,CAACS,GAAG,CAACE,IAAJ,CAASC,IAAV,CAAT;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALD;;AAMAM,IAAAA,WAAW,GAPG,CAQd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjBQ,EAiBN,CAACL,IAAD,CAjBM,CAAT,CARoB,CA2BpB;;AACA,QAAMU,gBAAgB,GAAGR,WAAW,GAAGE,aAAvC;AACA,QAAMO,iBAAiB,GAAGD,gBAAgB,GAAGN,aAA7C;AACA,QAAMQ,aAAa,GAAGhB,MAAM,CAACiB,KAAP,CAAaF,iBAAb,EAAgCD,gBAAhC,CAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ,EA/BoB,CAgCpB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAId,cAAc,CAACc,UAAD,CAA7C;;AAGA,sBACE;AAAA,4BAYE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,gBACGnB,SAAS,gBACV;AAAI,QAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU;AAAA;AAGV;AACA;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA,kBACCc,aAAa,CAACM,GAAd,CAAkBC,KAAK;AAAA;AACxB;AACE,gBAAC,IAAD;AAAqB,UAAA,KAAK,EAAEA;AAA5B,WAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAFsB,CAGxB;AACE;AAJD;AADD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAZF,eA0BE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAEhB,aAA9B;AAA6C,MAAA,WAAW,EAAER,MAAM,CAACyB,MAAjE;AAAyE,MAAA,QAAQ,EAAEL;AAAnF;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAnED;;GAAMrB,O;;KAAAA,O;AAqEN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n// import { Pagination, PaginationLink, PaginationItem, Input, Button } from 'reactstrap';\nimport axios, { Axios } from 'axios';\nimport Card from './Card';\nimport PaginationNav from './Pagination';\n\n\nconst Gallery = () => {\n  const [images , setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [imagesPerPage] = useState(10)\n\n  useEffect(() => {\n    const fetchImages = async() => {\n      setIsLoading(true);\n      const res = await axios.get(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true`);\n      setImages(res.data.hits);\n      setIsLoading(false);\n    }\n    fetchImages();\n    // fetch(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true`)\n    // .then( res => res.json())\n    // .then(data => {\n    //   console.log(data)\n    //   setImages(data.hits);\n    //   setIsLoading(false);\n    // })\n    // .catch(err => console.log(err))\n    // whenever the search term changes makes sure the fetch called again with new parameter\n  }, [term]);\n\n  // get current images\n  const indexOfLastImage = currentPage * imagesPerPage;\n  const indexOfFirstImage = indexOfLastImage - imagesPerPage;\n  const currentImages = images.slice(indexOfFirstImage, indexOfLastImage);\n  console.log(currentImages)\n  // change page\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n\n  return (\n    <div>\n      {/* <div>\n        <h1 className=\"font-bold text-6xl py-8 mx-8 lg:mx-20\">{term}</h1>\n\n        <Input onChange={e => setText(e.target.value)} type='search'></Input>\n            <Button onSubmit={onSubmit}\n                color=\"secondary\"\n                outline\n                >\n                Search\n            </Button>\n      </div> */}\n      <div className=\"container mx-auto py-0\">\n        {isLoading ? \n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>: \n        \n        // <div className=\"grid grid-flow-row-dense grid-cols-3 gap-x-6 gap-y-6\">\n        <div className=\"masonry before:box-inherit after:box-inherit overflow-y-scroll\">\n        {currentImages.map(image => (\n        // without pagination\n          <Card key={image.id} image={image}/>\n        // with pagination\n          // <Card key={image.id} image={currentImages}/>\n          ))}\n        </div>}\n      </div>\n      <PaginationNav imagesPerPage={imagesPerPage} totalImages={images.length} paginate={paginate}/>\n    </div>\n\n    )\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}