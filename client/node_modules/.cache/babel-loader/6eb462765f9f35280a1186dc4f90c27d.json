{"ast":null,"code":"var _jsxFileName = \"/Users/nivsuroghon/Documents/programming/gallery_app/image-gallery/client/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Input, Button } from 'reactstrap';\nimport axios from 'axios';\nimport Card from './Card';\nimport PaginationNav from './Pagination';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Gallery = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\"); // pagination state\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [imagesPerPage] = useState(15);\n  useEffect(() => {\n    const fetchImages = async () => {\n      const apiKey = proces.env.REACT_APP_PIXABAY_API_KEY;\n      setIsLoading(true);\n      const res = await axios.get(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true&safesearch=true`);\n      setImages(res.data.hits);\n      setIsLoading(false);\n    };\n\n    fetchImages();\n  }, [term]); // get current images\n\n  const indexOfLastImage = currentPage * imagesPerPage;\n  const indexOfFirstImage = indexOfLastImage - imagesPerPage;\n  const currentImages = images.slice(indexOfFirstImage, indexOfLastImage); // change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber); // change search term\n\n\n  const searchText = text => setTerm(text);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: term\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      searchText: searchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto py-0\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-6xl text-center mx-auto mt-32\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      // <div className=\"grid grid-flow-row-dense grid-cols-3 gap-x-6 gap-y-6\">\n      _jsxDEV(\"div\", {\n        className: \"masonry before:box-inherit after:box-inherit overflow-y-scroll\",\n        children: currentImages.map(image =>\n        /*#__PURE__*/\n        // without pagination\n        _jsxDEV(Card, {\n          image: image\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this) // with pagination\n        // <Card key={image.id} image={currentImages}/>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationNav, {\n      imagesPerPage: imagesPerPage,\n      totalImages: images.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gallery, \"IE6HCLUxgBRufFCZvEs6zxOOJVg=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/nivsuroghon/Documents/programming/gallery_app/image-gallery/client/src/components/Gallery.js"],"names":["React","useState","useEffect","Input","Button","axios","Card","PaginationNav","Search","Gallery","images","setImages","isLoading","setIsLoading","term","setTerm","currentPage","setCurrentPage","imagesPerPage","fetchImages","apiKey","proces","env","REACT_APP_PIXABAY_API_KEY","res","get","data","hits","indexOfLastImage","indexOfFirstImage","currentImages","slice","paginate","pageNumber","searchText","text","map","image","id","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAAUC,SAAV,IAAuBV,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC,CAHoB,CAKpB;;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACiB,aAAD,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,WAAW,GAAG,YAAW;AAC7B,YAAMC,MAAM,GAAGC,MAAM,CAACC,GAAP,CAAWC,yBAA1B;AAEAV,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMW,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,qEAAoEX,IAAK,+CAApF,CAAlB;AACAH,MAAAA,SAAS,CAACa,GAAG,CAACE,IAAJ,CAASC,IAAV,CAAT;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPD;;AAQAM,IAAAA,WAAW;AACZ,GAVQ,EAUN,CAACL,IAAD,CAVM,CAAT,CAToB,CAqBpB;;AACA,QAAMc,gBAAgB,GAAGZ,WAAW,GAAGE,aAAvC;AACA,QAAMW,iBAAiB,GAAGD,gBAAgB,GAAGV,aAA7C;AACA,QAAMY,aAAa,GAAGpB,MAAM,CAACqB,KAAP,CAAaF,iBAAb,EAAgCD,gBAAhC,CAAtB,CAxBoB,CA0BpB;;AACA,QAAMI,QAAQ,GAAIC,UAAD,IAAgBhB,cAAc,CAACgB,UAAD,CAA/C,CA3BoB,CA6BpB;;;AACA,QAAMC,UAAU,GAAIC,IAAD,IAAUpB,OAAO,CAACoB,IAAD,CAApC;;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKrB;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEoB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,gBACGtB,SAAS,gBACV;AAAI,QAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU;AAAA;AAGV;AACA;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA,kBACCkB,aAAa,CAACM,GAAd,CAAkBC,KAAK;AAAA;AACxB;AACE,gBAAC,IAAD;AAAqB,UAAA,KAAK,EAAEA;AAA5B,WAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAFsB,CAGxB;AACE;AAJD;AADD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YARF,eAsBE,QAAC,aAAD;AACE,MAAA,aAAa,EAAEpB,aADjB;AAEE,MAAA,WAAW,EAAER,MAAM,CAAC6B,MAFtB;AAGE,MAAA,QAAQ,EAAEP;AAHZ;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA9DD;;GAAMvB,O;;KAAAA,O;AAgEN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Input, Button } from 'reactstrap';\nimport axios from 'axios';\nimport Card from './Card';\nimport PaginationNav from './Pagination';\nimport Search from './Search';\n\n\nconst Gallery = () => {\n  const [images , setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n \n  // pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const [imagesPerPage] = useState(15);\n\n  useEffect(() => {\n    const fetchImages = async() => {\n      const apiKey = proces.env.REACT_APP_PIXABAY_API_KEY\n\n      setIsLoading(true);\n      const res = await axios.get(`https://pixabay.com/api/?key=22126125-95b100b3f165139e739090fac&q=${term}&image_type=photo&pretty=true&safesearch=true`);\n      setImages(res.data.hits);\n      setIsLoading(false);\n    }\n    fetchImages();\n  }, [term]);\n\n  // get current images\n  const indexOfLastImage = currentPage * imagesPerPage;\n  const indexOfFirstImage = indexOfLastImage - imagesPerPage;\n  const currentImages = images.slice(indexOfFirstImage, indexOfLastImage);\n \n  // change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // change search term\n  const searchText = (text) => setTerm(text);\n\n  return (\n    <div>\n      <h1>{term}</h1>\n      <Search searchText={searchText}/>\n      <div>\n        {/* <h1 className=\"font-bold text-6xl py-8 mx-8 lg:mx-20\">{term}</h1> */}\n\n      \n      </div>\n      <div className=\"container mx-auto py-0\">\n        {isLoading ? \n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>: \n        \n        // <div className=\"grid grid-flow-row-dense grid-cols-3 gap-x-6 gap-y-6\">\n        <div className=\"masonry before:box-inherit after:box-inherit overflow-y-scroll\">\n        {currentImages.map(image => (\n        // without pagination\n          <Card key={image.id} image={image}/>\n        // with pagination\n          // <Card key={image.id} image={currentImages}/>\n          ))}\n        </div>}\n      </div>\n      <PaginationNav \n        imagesPerPage={imagesPerPage} \n        totalImages={images.length} \n        paginate={paginate}/>\n    </div>\n\n    )\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}